
HL :
    ZG should be a server binary :
        The command line will be another shell application that can call ZG deamon.


### cli
    This will be used for showing and doing stuff on the command line

    cl_render : Cluster Render Shows the pgxc_ctl config in a table format. Currently just showcase type. Need work.


## Spoc:
    spoc.go : SPOC (Single Point Of Contact) facilitates communication between teams of people. Kind of a similar concept
        the calls would be routed through this interface(?) so the means of communication can be abstracted away from the
        calling modules so different ways can be used to communicate.


## Parsers:

    ### gtm

    ### postgres_conf
        pg_ident_conf.go            -- pg_ident.conf file
        pghba_conf.go               -- pg_hba.conf
        postgresql_conf.go          -- postgresql.conf
        postgresql_live_config.go   -- This is live configuration from the running instance
                                        It is possible that the config on the file is old and not the actual config.

    ### pgctl
        model_conf_file.go :
            A struct that has all the settings as they are represented in the pgxc_ctl file
                this is used for taking the values from the file and puts them in go.

        model_logical_object.go:
            This is the logical representation of the cluster.

        pgxc_conf_file_parser.go
            This is the file that parsers actual conf file and populates the model_conf object first and then the logical.

        util.go
            Common utility functions to work with the pgxc file to clean spaces and return different types of data.








